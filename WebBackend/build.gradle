/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3-rc-1/userguide/building_java_projects.html in the Gradle documentation.
 */


plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'maven-publish'
    id 'io.freefair.lombok' version '8.11'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'ch.qos.logback:logback-classic:1.5.12'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'org.hibernate.orm:hibernate-core:6.6.3.Final'
    implementation 'org.postgresql:postgresql:42.7.4'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    implementation 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    implementation 'io.github.cdimascio:java-dotenv:5.0.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'utp.edu.pe.RestauranteBackend.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}